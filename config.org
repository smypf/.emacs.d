#+TITLE: Emacs Config
#+AUTHOR: Sasha Yee

* Things to fix
- [ ] Key Bindings
  - [ ] Tab to open close headings
  - [X] SPC w <window operations>

- [X] Turn off noise
- [ ] Don't install packages every time.
- [X] Use the theme
- [X] SPC-: Replicate from Doom
- [X] Install magit
- [ ] New splash page
- [ ] Make Which-Key not as noisy - Unbind unused keys?
- [X] Install Consult etc
- Magit
  - [ ] Open in vertical split
  - [ ] Change buffer below commit message instead of on top of
- [ ] Automatically install packages
  https://stackoverflow.com/a/10093312
  https://stackoverflow.com/a/10095853
- [ ] Paging is weird. Scrolling pages down at the bottom of the page

- [ ] LSP ?

* Basic settings
#+BEGIN_SRC emacs-lisp
  (menu-bar-mode -1)
  (setq visible-bell 1)
#+END_SRC

* Package Management
** Use package.el to use MELPA
#+BEGIN_SRC emacs-lisp
  (require 'package)
  (add-to-list 'package-archives
	       '("melpa" . "https://melpa.org/packages/"))

  ;; Setting this significantly increases the statup time as packages are refreshed from melpa
  ;; See C-h f package-refresh-contents
  ;; (package-refresh-contents)
  (setq package-enable-at-startup nil)
#+END_SRC

** use-package

#+BEGIN_SRC emacs-lisp
  ;; This is only needed once, near the top of the file
  (eval-when-compile
    ;; Following line is not needed if use-package.el is in ~/.emacs.d
    (add-to-list 'load-path "~/.emacs.d/elpa/")
    (unless (package-installed-p 'use-package)
      (require 'use-package)))
  (setq use-package-always-ensure t)
#+END_SRC

* EVIL Mode

#+BEGIN_SRC emacs-lisp
  (use-package evil
    :init
    (setq evil-want-integration t
	  evil-want-keybinding nil
	  evil-vsplit-window-right t
	  evil-split-window-below t
	  evil-undo-system 'undo-redo)
    (evil-mode))

  (use-package evil-collection
    :after evil
    :config
    (evil-collection-init))

  (use-package general
    :init
    (general-evil-setup t))

  (defconst leader "SPC")

  (setq scroll-conservatively 101) ; Prevent the cursor jumping to the middle of the page when scrolling to the bottom of the screen
					  ; https://stackoverflow.com/a/25777730
  (setq scroll-margin 5)
#+END_SRC

*** New commands

Sometimes I have sausage fingers. These commands allow me to mistype commands which I regularly input incorrectly
#+BEGIN_SRC emacs-lisp
  ; For some reason this doesn't work
  ; (evil-ex-define-cmd "\"w" 'evil-write) 
  (evil-ex-define-cmd "W" 'evil-write) 

#+END_SRC
* Appearance
** Theme

#+BEGIN_SRC emacs-lisp
  (package-install-file "~/.emacs.d/eink-theme.el")

  (load-theme 'eink t)
#+END_SRC

** Other
#+BEGIN_SRC emacs-lisp
  ;; Add line numbers globally
  (global-display-line-numbers-mode)
#+END_SRC
* Magit

#+BEGIN_SRC emacs-lisp
  (use-package magit)

  (general-define-key
   :states 'normal
   :keymaps 'override
   :prefix leader
   "g" 'magit)

  ; Kill the magit buffer and close the pane
  (general-define-key
   :state 'normal
   :keymaps 'magit-mode-map
   "q" 'kill-buffer-and-window)
#+END_SRC

* Which Key

#+BEGIN_SRC emacs-lisp
  (use-package which-key)
  (which-key-mode)
#+END_SRC

* Dired

#+BEGIN_SRC emacs-lisp
  (general-define-key
   :states 'normal
   "-" 'dired-jump)

  (evil-define-key 'normal dired-mode-map "q" 'kill-buffer-and-window)

  ; Prevent new buffers from being created when navigating directories
  (setq dired-kill-when-opening-new-dired-buffer t)
#+END_SRC

* Window Manipulation

#+BEGIN_SRC emacs-lisp
  (general-define-key
   :states 'normal
   :keymaps 'override
   :prefix leader
   "w" 'evil-window-map)

  (define-key evil-window-map (kbd "<right>") 'evil-window-right)
  (define-key evil-window-map (kbd "<left>") 'evil-window-left)
  (define-key evil-window-map (kbd "<up>") 'evil-window-up)
  (define-key evil-window-map (kbd "<down>") 'evil-window-down)

  (define-key evil-window-map (kbd "S-<right>") 'evil-window-move-far-right)
  (define-key evil-window-map (kbd "S-<left>") 'evil-window-move-far-left)
  (define-key evil-window-map (kbd "S-<up>") 'evil-window-move-very-top)
  (define-key evil-window-map (kbd "S-<down>") 'evil-window-move-very-bottom)
#+END_SRC


* Completion

Vertico
https://github.com/minad/vertico#complementary-packages

#+BEGIN_SRC emacs-lisp
  (use-package vertico
    :init
    (vertico-mode)
    (setq vertico-count 15))

  (general-nmap
    "  " 'vertico-find)

  (use-package consult
    :init)

  (use-package orderless
    :custom
    (completion-styles '(orderless basic))
    (completion-category-overrides '((file (styles basic partial-completion)))))
#+END_SRC

* QOL Extensions
** Projectile

#+BEGIN_SRC emacs-lisp
    (use-package projectile)

    (general-define-key
     :states 'normal
     :keymaps 'override
     :prefix leader
     "SPC" 'projectile-find-file
     "pp" 'projectile-switch-project)

    (setq projectile-project-search-path '("~/projects/"))
    (projectile-discover-projects-in-search-path)
#+END_SRC

** simple.el

#+BEGIN_SRC emacs-lisp
  (general-define-key
   :states 'normal
   :keymaps 'override
   :prefix leader
   ":" 'execute-extended-command)
#+END_SRC


** Buffers

#+BEGIN_SRC emacs-lisp
  (general-define-key
   :states 'normal
   :keymaps 'override
   :prefix leader
   "bp" 'evil-prev-buffer
   "bn" 'evil-next-buffer)
#+END_SRC

